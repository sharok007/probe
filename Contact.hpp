/*!
	\file
	\brief Заголовочный файл с описанием класса  Contact 


	Данный файл содержит в себе описания класса общего назначения Contact
*/


/*! @class  Contact
    Класс общего назначения
*/
#pragma once

#include<vector>
#include"Log.hpp"
#include"Board.hpp"

class Contact{
private:
//! Вектор,предназначенный для хранения объектов класса Log
std::vector<Log> vecLog;

//! Счётчик,для подсчёта количества раз добавления  сырья
int a;

//! Вектор,предназначенный для хранения объектов класса Board
std::vector<Board> vecBoa;

//! Счётчик,для подсчёта количества раз успешного производства
int o;

public:
//! Метод добавления на склад нового сырья
//!@param[in] lo-объект класса Log,в который добавляется сырьё 
void addLog(Log &lo);

//! Метод производства досок
//!@param[in] bo-объект класса Board,в который добавляется продукция
void makeBoard(Board &bo);

//!Метод сохранения данных
//!@param[in] filename-имя файла,в который будут сохранены данные
//!@param[out] lo-объект класса Log,из которого будут сохранены данные сырья
//!@param[out] bo-объект класса Board,из которого будут сохранены данные продукции
void SaveData(std::string filename,Log &lo,Board &bo);

//!Метод загрузки данных из файла
//!@param[out] filename-имя файла,из которого будут считаны данные
void loadData(std::string filename);

//!Метод,выполняющий поиск на складах сырья и продукции
//!@param lo-объект класса Log,в котором производится поиск сырья
//!@param bo-объект класса Board,в котором производится поиск продукции
void poisk(Log &lo,Board &bo);

//!Метод,предназначенный для удаления со складов сырья и продукции
//!@param lo-объект класса Log,из которого удаляется сырьё
//!@param bo-объект класса Board,из которого удаляется продукция 
void deleteLog(Log &lo,Board &bo);

//!Метод инициализации счётчиков
void setAO();

//!Метод,созданный для удобства производства
//!@param n-количество кубов продукции
//!@param q-количество кубов затраченного сырья
//!@param name-название сырья,из которого произведены доски
//!@param size-размер доски
//!@param[in] bo-объект класса Board,в который добавляется продукция
void condition(float n,float q,std::string name,std::string size,Board &bo);

//!Метод,предназначенный для просмотра складов сырья и продукции
void prosm();

//!Метод,предназначенный для начала работы программы
int start();
};

